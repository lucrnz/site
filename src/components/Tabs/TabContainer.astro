---
export interface Props {
  tabs: string[];
}

const { tabs: title } = Astro.props;
---

<div class="contents print:hidden" data-tab-container>
  <!-- class="tabs-buttons" -->
  <div>
    {
      title.map((title, index) => (
        <button
          data-tab-target={index}
          data-selected={index === 0 ? "true" : "false"}
        >
          {title}
        </button>
      ))
    }
  </div>

  <div class="hidden" data-tab-templates>
    <tamplate data-tab-content><slot name="tab-1" /></tamplate>
    <tamplate data-tab-content><slot name="tab-2" /></tamplate>
    <tamplate data-tab-content><slot name="tab-3" /></tamplate>
    <tamplate data-tab-content><slot name="tab-4" /></tamplate>
    <tamplate data-tab-content><slot name="tab-5" /></tamplate>
    <tamplate data-tab-content><slot name="tab-6" /></tamplate>
  </div>

  <div class="tabs-content" data-selected-tab>
    <div data-tab-content><slot name="tab-1" /></div>
  </div>

  <input type="hidden" value="0" data-selected-tab-index />
</div>

<div class="hidden print:block">
  {
    title[0] && (
      <div class="print:flex flex-col gap-1">
        <span class="print:font-medium">{title[0]}</span>
        <slot name="tab-1" />
      </div>
    )
  }
  {
    title[1] && (
      <div class="print:flex flex-col gap-1">
        <span class="print:font-medium">{title[1]}</span>
        <slot name="tab-2" />
      </div>
    )
  }
  {
    title[2] && (
      <div class="print:flex flex-col gap-1">
        <span class="print:font-medium">{title[2]}</span>
        <slot name="tab-3" />
      </div>
    )
  }
  {
    title[3] && (
      <div class="print:flex flex-col gap-1">
        <span class="print:font-medium">{title[3]}</span>
        <slot name="tab-4" />
      </div>
    )
  }
  {
    title[4] && (
      <div class="print:flex flex-col gap-1">
        <span class="print:font-medium">{title[4]}</span>
        <slot name="tab-5" />
      </div>
    )
  }
  {
    title[5] && (
      <div class="print:flex flex-col gap-1">
        <span class="print:font-medium">{title[5]}</span>
        <slot name="tab-6" />
      </div>
    )
  }
</div>

<!-- TODO: migrate to tailwind -->
<!-- <style lang="scss">
  .tabs-buttons {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 1rem;

    & > button {
      transition: all 0.2s ease-in-out;
      color: scale-color($accent-2-color, $alpha: -50%);
      background-color: $forth-color;
      max-width: fit-content;
      border: none;
      height: 2.5rem;
      border-bottom: 0.1rem solid transparent;

      &:hover {
        cursor: pointer;
        color: $accent-2-color;
      }

      &[data-selected="true"] {
        color: $accent-2-color;
        border-bottom: 0.1rem solid $accent-2-color;
      }
    }
  }
</style> -->

<script>
  import { setupScript } from "../../scripts/setupScript";
  import { setupTabContainers } from "../../scripts/tabContainer";

  await setupScript({ name: "tab-containers", setup: setupTabContainers });
</script>
